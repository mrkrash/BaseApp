openapi: 3.0.3
info:
  title: Base API
  description: A simple CRUD API
  version: 0.0.1

tags:
  - name: Base
    description: the Base resource

paths:
  /items:
    get:
      tags: [ Items ]
      summary: List all Items
      operationId: listItems
      parameters:
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/pageSize'
      responses:
        '200':
          $ref: '#/components/responses/ItemList'
components:
  schemas:
    Item:
      properties:
        id:
          type: integer
          readOnly: true
          example: 123
        createdAt:
          type: string
          readOnly: true
          example: "4020-04-20T16:20:00.000000+0000"
          format: date-time
        name:
          type: string
          example: "Foo"
        description:
          type: string
          example: "Foo Bar Taz"
        deletedAt:
          type: string
          example: "4020-04-20T16:20:00.000000+0000"
          format: date-time
      required:
        - id
        - name
    GenericError:
      properties:
        error:
          type: object
          properties:
            message:
              type: string
            code:
              type: integer
          required:
            - message
            - code
    InvalidDataError:
      properties:
        error:
          type: object
          properties:
            message:
              type: string
            code:
              type: integer
            details:
              type: object
              example:
                messageIdentifier: detailed message
          required:
            - message
            - code
  requestBodies:
    Item:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/component/schemas/Item'
  responses:
    Item:
      description: A single Item
      content:
        application/json:
          schema:
            $ref: '#/component/schemas/Item'
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericError'
    BadRequest:
      description: Invalid request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvalidDataError'
    Unauthorized:
      description: Authentication failed
      content: { }
      headers:
        WWW-Authenticate:
          schema:
            type: string
          description: Supported authentication schema
  parameters:
    id:
      in: path
      name: id
      description: An integer representation of a ID
      required: true
      schema:
        type: integer
        example: 8610
    search:
      name: search
      in: query
      schema:
        type: string
        example: 'foo'
      description: Full text search phrase
    page:
      name: page
      in: query
      schema:
        type: integer
        default: 1
        example: 1
      description: The page number
    pageSize:
      name: pageSize
      in: query
      schema:
        type: integer
        default: 20
        example: 20
      description: The maximum page size
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic

security:
  - basicAuth: [ ]